buildscript {

    ext {
        es_version = System.getProperty("es.version", "7.6.1")
    }
    // This isn't applying from repositories.gradle so repeating it here
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.elasticsearch.gradle:build-tools:${es_version}"
    }
}

plugins {
    id "java"
    id "com.moowork.node" version "1.2.0"
}

node {
    version = "10.15.0"
    download = false
}

ext {
    opendistroVersion = '1.6.0'
    isSnapshot = "true" == System.getProperty("build.snapshot", "true")
    isLinux = "true" == System.getProperty("build.linux", "false")
    isMacOS = "true" == System.getProperty("build.macos", "false")
}

group = "com.amazon.opendistroforelasticsearch"
version = "${opendistroVersion}.0"
if (isLinux) {
    version += "-LINUX"
}
if (isMacOS) {
    version += "-MACOS"
}
if (isSnapshot) {
    version += "-SNAPSHOT"
}

repositories {
    mavenCentral()
}

apply plugin: 'elasticsearch.esplugin'

ext {
    projectSubstitutions = [:]
    licenseFile = rootProject.file('LICENSE.txt')
    noticeFile = rootProject.file('NOTICE.txt')
}
test {
    enabled = false
}
licenseHeaders.enabled = false

task npmRunBuild(type: NpmTask, dependsOn: 'npmInstall') {
    if (isLinux) {
        args = ['run', 'build-linux']
    }
    if (isMacOS) {
        args = ['run', 'build-macos']
    }
}

task npmRunClean(type: NpmTask) {
    args = ['run', 'clean']
}

compileJava {
    dependsOn npmRunBuild
}

clean {
    dependsOn npmRunClean
}

// We are excluding plugin descriptor for PerfTop
// The info here could be random
esplugin {
    name 'perf-top'
    description 'PerfTop'
    classname 'com.amazon.opendistro.elasticsearch.performanceanalyzer.PerformanceAnalyzerPlugin'
}


bundlePlugin {
    exclude "perf-top*.jar"
    exclude "plugin-descriptor.properties"
    if (isLinux) {
        from ("build/") {
            include "perf-top-linux"
        }
    }
    if (isMacOS) {
        from ("build/") {
            include "perf-top-macos"
        }
    }
    from ("dashboards/") {
        into "dashboards/"
        include "*.json"
    }
}

// The testingConventions task now mandates atleast one of the integ test tasks to be performed.
// Since perftop is not really a plugin on its own, it fails the plugin install step during the integ tests. So, 
// skip running testingConventions task.
gradle.startParameter.excludedTaskNames += ["integTestRunner", "testingConventions"]
